{
  "version": "2",
  "templates": [
    {
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "America/Chicago",
          "description": "Specify a timezone to use for example America/New_York"
        }
      ],
      "description": "AdGuard Home is a network-wide software for blocking ads & tracking, includes AdGuardHome Sync",
      "logo": "https://raw.githubusercontent.com/JourneyOver/selfhosted_templates/main/images/adguardhome-logo.png",
      "name": "agh-aghsync",
      "platform": "linux",
      "title": "AdGuardHome with AdGuardHome-Sync",
      "type": 3,
      "repository": {
        "stackfile": "template/stacks/AGH-AGHSync.yml",
        "url": "https://github.com/JourneyOver/selfhosted_templates"
      }
    },
    {
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "America/Chicago",
          "description": "Specify a timezone to use for example America/New_York"
        },
        {
          "name": "ASF_CRYPTKEY",
          "label": "ASF_CRYPTKEY",
          "default": "",
          "description": "will start ASF with custom cryptographic key of <ASF_CRYPTKEY> value. This option affects security and will cause ASF to use your custom provided <ASF_CRYPTKEY> key instead of default one hardcoded into the executable. Since this property affects default encryption key (for encrypting purposes) as well as salt (for hashing purposes), keep in mind that everything encrypted/hashed with this key will require it to be passed on each ASF run. To Read more about this option, please visit https://github.com/JustArchiNET/ArchiSteamFarm/wiki"
        }
      ],
      "description": "C# application with primary purpose of farming Steam cards from multiple accounts simultaneously.",
      "logo": "https://raw.githubusercontent.com/JourneyOver/selfhosted_templates/main/images/archisteamfarm-logo.png",
      "name": "archisteamfarm",
      "platform": "linux",
      "title": "ArchiSteamFarm",
      "type": 3,
      "repository": {
        "stackfile": "template/stacks/ArchiSteamFarm.yml",
        "url": "https://github.com/JourneyOver/selfhosted_templates"
      }
    },
    {
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "America/Chicago",
          "description": "Specify a timezone to use for example America/New_York"
        }
      ],
      "description": "Self-hosted audiobook and podcast server.",
      "logo": "https://raw.githubusercontent.com/JourneyOver/selfhosted_templates/main/images/audiobookshelf-logo.png",
      "name": "audiobookshelf",
      "platform": "linux",
      "title": "Audiobookshelf",
      "type": 3,
      "repository": {
        "stackfile": "template/stacks/Audiobookshelf.yml",
        "url": "https://github.com/JourneyOver/selfhosted_templates"
      }
    },
    {
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "America/Chicago",
          "description": "Specify a timezone to use for example America/New_York"
        },
        {
          "name": "RUN_AT",
          "label": "RUN_AT",
          "default": "0 5,16 * * *",
          "description": "Specify a time to run the backup at. cron expressions can be tested @ https://crontab.guru/"
        }
      ],
      "description": "An automated solution for earning daily Microsoft Rewards points using Python and Selenium",
      "logo": "",
      "name": "bing-rewards",
      "platform": "linux",
      "title": "Bing Rewards",
      "type": 3,
      "repository": {
        "stackfile": "template/stacks/BingRewards.yml",
        "url": "https://github.com/JourneyOver/selfhosted_templates"
      }
    },
    {
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "America/Chicago",
          "description": "Specify a timezone to use for example America/New_York"
        },
        {
          "name": "APP_KEY",
          "label": "APP_KEY",
          "default": "",
          "description": "The encryption key for your sessions. Keep this very secure.\nChange it to a string of exactly 32 chars or use something like `php artisan key:generate` to generate it.\nIf you use Docker or similar, you can set this variable from a file by using APP_KEY_FILE\n\nAvoid the '#' character in your APP_KEY, it may break things."
        },
        {
          "name": "DB_HOST",
          "label": "DB_HOST",
          "default": "",
          "description": "The host of the database server."
        },
        {
          "name": "DB_PORT",
          "label": "DB_PORT",
          "default": "",
          "description": "The port of the database server."
        },
        {
          "name": "DB_CONNECTION",
          "label": "DB_CONNECTION",
          "default": "",
          "description": "The connection type of the database server. (mysql, pgsql, sqlite)"
        },
        {
          "name": "DB_DATABASE",
          "label": "DB_DATABASE",
          "default": "",
          "description": "The name of the database."
        },
        {
          "name": "DB_USERNAME",
          "label": "DB_USERNAME",
          "default": "",
          "description": "The username of the database user."
        },
        {
          "name": "DB_PASSWORD",
          "label": "DB_PASSWORD",
          "default": "",
          "description": "The password of the database user."
        },
        {
          "name": "TRUSTED_PROXIES",
          "label": "TRUSTED_PROXIES",
          "default": "",
          "description": "TRUSTED_PROXIES is a useful variable when using Docker and/or a reverse proxy.\nSet it to ** and reverse proxies work just fine."
        },
        {
          "name": "APP_URL",
          "label": "APP_URL",
          "default": "",
          "description": "The URL of the application. only used to determine the URL of Firefly III when Firefly III is incapable of doing so: when using the command line or when drafting emails."
        }
      ],
      "description": "Firefly III: a personal finances manager",
      "logo": "https://raw.githubusercontent.com/JourneyOver/selfhosted_templates/main/images/firefly3-logo.png",
      "name": "firefly",
      "platform": "linux",
      "title": "Firefly III",
      "type": 3,
      "repository": {
        "stackfile": "template/stacks/Firefly-III.yml",
        "url": "https://github.com/JourneyOver/selfhosted_templates"
      }
    },
    {
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "America/Chicago",
          "description": "Specify a timezone to use for example America/New_York"
        },
        {
          "name": "RUN_AT",
          "label": "RUN_AT",
          "default": "0 9 * * 0",
          "description": "CRON command"
        },
        {
          "label": "CUSTOM_LANGUAGE",
          "name": "CUSTOM_LANGUAGE",
          "select": [
            {
              "default": true,
              "text": "English",
              "value": "en"
            },
            {
              "text": "Chinese",
              "value": "zh"
            }
          ]
        }
      ],
      "description": "Automatically renew your freenom domain.",
      "logo": "https://raw.githubusercontent.com/JourneyOver/selfhosted_templates/main/images/freenom-logo.png",
      "name": "freenom",
      "platform": "linux",
      "title": "Freenom",
      "type": 3,
      "repository": {
        "stackfile": "template/stacks/Freenom.yml",
        "url": "https://github.com/JourneyOver/selfhosted_templates"
      }
    },
    {
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "America/Chicago",
          "description": "Specify a timezone to use for example America/New_York"
        }
      ],
      "description": "Homarr is a simple and lightweight homepage for your server, that helps you easily access all of your services in one place.",
      "logo": "https://raw.githubusercontent.com/JourneyOver/selfhosted_templates/main/images/homarr-logo.png",
      "name": "homarr",
      "platform": "linux",
      "title": "Homarr",
      "type": 3,
      "repository": {
        "stackfile": "template/stacks/Homarr.yml",
        "url": "https://github.com/JourneyOver/selfhosted_templates"
      }
    },
    {
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "America/Chicago",
          "description": "Specify a timezone to use for example America/New_York"
        },
        {
          "name": "JOAL_SERVER_PORT",
          "label": "JOAL_SERVER_PORT",
          "default": "20026",
          "description": "port to be used for both HTTP and WebSocket connection"
        },
        {
          "name": "JOAL_PATH_PREFIX",
          "label": "JOAL_PATH_PREFIX",
          "default": "joal",
          "description": "use your own complicated path here (this will be your first layer of security to keep joal secret). This is security though obscurity, but it is required in our case. This must contains only alphanumeric characters (no slash, backslash, or any other non-alphanum char)"
        },
        {
          "name": "JOAL_SECRET_TOKEN",
          "label": "JOAL_SECRET_TOKEN",
          "default": "changeme",
          "description": "your own secret token here (this is some kind of a password, choose a complicated one)"
        }
      ],
      "description": "An open source command line RatioMaster with WebUI.",
      "logo": "https://raw.githubusercontent.com/JourneyOver/selfhosted_templates/main/images/joal-logo.png",
      "name": "joal",
      "platform": "linux",
      "title": "Joal",
      "type": 3,
      "repository": {
        "stackfile": "template/stacks/Joal.yml",
        "url": "https://github.com/JourneyOver/selfhosted_templates"
      }
    },
    {
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "America/Chicago",
          "description": "Specify a timezone to use for example America/New_York"
        }
      ],
      "description": "Self-hosted pastebin powered by Git, open-source alternative to Github Gist.",
      "logo": "https://raw.githubusercontent.com/JourneyOver/selfhosted_templates/main/images/opengist-logo.png",
      "name": "opengist",
      "platform": "linux",
      "title": "OpenGist",
      "type": 3,
      "repository": {
        "stackfile": "template/stacks/OpenGist.yml",
        "url": "https://github.com/JourneyOver/selfhosted_templates"
      }
    },
    {
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "America/Chicago",
          "description": "Specify a timezone to use for example America/New_York"
        },
        {
          "name": "PMM_NO_COUNTDOWN",
          "label": "PMM_NO_COUNTDOWN",
          "select": [
            {
              "default": true,
              "text": "Run without displaying a countdown to the next scheduled run.",
              "value": "true"
            },
            {
              "text": "Run with displaying a countdown to the next scheduled run.",
              "value": "false"
            }
          ]
        }
      ],
      "description": "Python script to update metadata information for items in plex as well as automatically build collections and playlists.",
      "logo": "https://raw.githubusercontent.com/JourneyOver/selfhosted_templates/main/images/pmm-logo.png",
      "name": "plex-meta-manager",
      "platform": "linux",
      "title": "Plex Meta Manager",
      "type": 3,
      "repository": {
        "stackfile": "template/stacks/Plex-Meta-Manager.yml",
        "url": "https://github.com/JourneyOver/selfhosted_templates"
      }
    },
    {
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "America/Chicago",
          "description": "Specify a timezone to use for example America/New_York"
        },
        {
          "name": "POSTGRES_USER",
          "label": "POSTGRES_USER",
          "default": "",
          "description": "Specify a username for the default user"
        },
        {
          "name": "POSTGRES_PASSWORD",
          "label": "POSTGRES_PASSWORD",
          "default": "",
          "description": "Specify a password for the default user"
        },
        {
          "name": "POSTGRES_DB",
          "label": "POSTGRES_DB",
          "default": "",
          "description": "Specify a database name for the default user"
        },
        {
          "name": "PGADMIN_MAIL",
          "label": "PGADMIN_MAIL",
          "default": "",
          "description": "Specify a mail for the pgadmin user"
        },
        {
          "name": "PGADMIN_PASSWORD",
          "label": "PGADMIN_PASSWORD",
          "default": "",
          "description": "Specify a password for the pgadmin user"
        },
        {
          "name": "DB_NAME",
          "label": "DB_NAME",
          "default": "",
          "description": "Comma or space separated list of postgres databases to backup."
        },
        {
          "name": "SCHEDULE",
          "label": "SCHEDULE",
          "default": "@daily",
          "description": "Cron-schedule specifying the interval between postgres backups. Defaults to @daily."
        }
      ],
      "note": "must create pgadmin folder manually and run `sudo chown 5050:5050 pgadmin` otherwise it will not work",
      "description": "PostgreSQL, also known as Postgres, is a free and open-source relational database management system emphasizing extensibility and SQL compliance. Includes pgAdmin4 for web management and PGBackups for scheduled backups.",
      "logo": "https://raw.githubusercontent.com/JourneyOver/selfhosted_templates/main/images/postgresql-logo.png",
      "name": "postgresql",
      "platform": "linux",
      "title": "PostgreSQL",
      "type": 3,
      "repository": {
        "stackfile": "template/stacks/PostgreSQL.yml",
        "url": "https://github.com/JourneyOver/selfhosted_templates"
      }
    },
    {
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "America/Chicago",
          "description": "Specify a timezone to use for example America/New_York"
        }
      ],
      "description": "Prowlarr is a indexer manager/proxy built on the popular arr .net/reactjs base stack to integrate with your various PVR apps. Prowlarr supports both Torrent Trackers and Usenet Indexers. It integrates seamlessly with Sonarr, Radarr, Lidarr, and Readarr offering complete management of your indexers with no per app Indexer setup required (we do it all).",
      "logo": "https://raw.githubusercontent.com/JourneyOver/selfhosted_templates/main/images/prowlarr-logo.png",
      "name": "prowlarr",
      "platform": "linux",
      "title": "Prowlarr",
      "type": 3,
      "repository": {
        "stackfile": "template/stacks/Prowlarr.yml",
        "url": "https://github.com/JourneyOver/selfhosted_templates"
      }
    },
    {
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "America/Chicago",
          "description": "Specify a timezone to use for example America/New_York"
        }
      ],
      "description": "Radarr - A fork of Sonarr to work with movies à la Couchpotato.",
      "logo": "https://raw.githubusercontent.com/JourneyOver/selfhosted_templates/main/images/radarr-logo.png",
      "name": "radarr",
      "platform": "linux",
      "title": "Radarr",
      "type": 3,
      "repository": {
        "stackfile": "template/stacks/Radarr.yml",
        "url": "https://github.com/JourneyOver/selfhosted_templates"
      }
    },
    {
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "America/Chicago",
          "description": "Specify a timezone to use for example America/New_York"
        },
        {
          "name": "SHIORI_PG_USER",
          "label": "SHIORI_PG_USER",
          "default": "",
          "description": "Name of PostgreSQL user"
        },
        {
          "name": "SHIORI_PG_PASS",
          "label": "SHIORI_PG_PASS",
          "default": "",
          "description": "Password of PostgreSQL user"
        },
        {
          "name": "SHIORI_PG_NAME",
          "label": "SHIORI_PG_NAME",
          "default": "",
          "description": "Name of database to use"
        },
        {
          "name": "SHIORI_PG_HOST",
          "label": "SHIORI_PG_HOST",
          "default": "",
          "description": "Address of PostgreSQL server"
        },
        {
          "name": "SHIORI_PG_PORT",
          "label": "SHIORI_PG_PORT",
          "default": "",
          "description": "Port of PostgreSQL server"
        }
      ],
      "description": "Shiori is a simple bookmarks manager written in Go language. Intended as a simple clone of Pocket. You can use it as command line application or as web application.",
      "logo": "https://raw.githubusercontent.com/JourneyOver/selfhosted_templates/main/images/shiori-logo.png",
      "name": "shiori",
      "platform": "linux",
      "title": "Shiori",
      "type": 3,
      "repository": {
        "stackfile": "template/stacks/Shiori.yml",
        "url": "https://github.com/JourneyOver/selfhosted_templates"
      }
    },
    {
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "America/Chicago",
          "description": "Specify a timezone to use for example America/New_York"
        }
      ],
      "description": "Snippet Box is a simple self-hosted app for organizing your code snippets.",
      "logo": "https://raw.githubusercontent.com/JourneyOver/selfhosted_templates/main/images/snibox-logo.png",
      "name": "snippet-box",
      "platform": "linux",
      "title": "Snippet Box",
      "type": 3,
      "repository": {
        "stackfile": "template/stacks/Snippet-Box.yml",
        "url": "https://github.com/JourneyOver/selfhosted_templates"
      }
    },
    {
      "categories": [],
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "America/Chicago",
          "description": "Specify a timezone to use for example America/New_York"
        },
        {
          "name": "DB_HOST",
          "label": "DB_HOST",
          "default": "",
          "description": "Address of PostgreSQL server"
        },
        {
          "name": "DB_PORT",
          "label": "DB_PORT",
          "default": "",
          "description": "Port of PostgreSQL server"
        },
        {
          "name": "DB_DATABASE",
          "label": "DB_DATABASE",
          "default": "",
          "description": "Name of database to use"
        },
        {
          "name": "DB_USERNAME",
          "label": "DB_USERNAME",
          "default": "",
          "description": "Name of PostgreSQL user"
        },
        {
          "name": "DB_PASSWORD",
          "label": "DB_PASSWORD",
          "default": "",
          "description": "Password of PostgreSQL user"
        }
      ],
      "description": "Run a Speedtest every hour and graph the results.",
      "logo": "https://raw.githubusercontent.com/JourneyOver/selfhosted_templates/main/images/speedtest-tracker-logo.png",
      "name": "speedtest-tracker",
      "note": "Default Username and password is: `admin@example.com;password`.",
      "platform": "linux",
      "title": "Speedtest Tracker",
      "type": 3,
      "repository": {
        "stackfile": "template/stacks/Speedtest-Tracker.yml",
        "url": "https://github.com/JourneyOver/selfhosted_templates"
      }
    },
    {
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "America/Chicago",
          "description": "Specify a timezone to use for example America/New_York"
        }
      ],
      "description": "A bot for steamgifts.com",
      "logo": "",
      "name": "steamgifts-bot",
      "platform": "linux",
      "title": "SteamGifts Bot",
      "type": 3,
      "repository": {
        "stackfile": "template/stacks/Steamgifts-Bot.yml",
        "url": "https://github.com/JourneyOver/selfhosted_templates"
      }
    },
    {
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "America/Chicago",
          "description": "Specify a timezone to use for example America/New_York"
        },
        {
          "name": "URL",
          "label": "URL",
          "default": "yourdomain.url",
          "description": "Top url you have control over (customdomain.com if you own it, or customsubdomain.ddnsprovider.com if dynamic dns)."
        },
        {
          "name": "VALIDATION",
          "label": "VALIDATION",
          "select": [
            {
              "text": "Use HTTP Method",
              "value": "http"
            },
            {
              "default": true,
              "text": "Use DNS Method",
              "value": "dns"
            }
          ],
          "description": "Certbot validation method to use, options are http or dns (dns method also requires DNSPLUGIN variable set)."
        },
        {
          "name": "SUBDOMAINS",
          "label": "SUBDOMAINS",
          "default": "www,",
          "description": "Subdomains you'd like the cert to cover (comma separated, no spaces) ie. www,ftp,cloud. For a wildcard cert, set this exactly to wildcard (wildcard cert is available via dns validation only)"
        },
        {
          "name": "EXTRA_DOMAINS",
          "label": "EXTRA_DOMAINS",
          "default": "",
          "description": "Additional fully qualified domain names (comma separated, no spaces) ie. extradomain.com,subdomain.anotherdomain.org,*.anotherdomain.org"
        },
        {
          "name": "DNSPLUGIN",
          "label": "DNSPLUGIN",
          "default": "",
          "description": "DNS plugin to use for dns validation (only required if using dns validation method)"
        },
        {
          "name": "EMAIL",
          "label": "EMAIL",
          "default": "",
          "description": "Optional e-mail address used for cert expiration notifications (Required for ZeroSSL)."
        },
        {
          "name": "DOCKER_MODS",
          "label": "DOCKER_MODS",
          "default": "",
          "description": "linuxserver Docker Mods"
        },
        {
          "name": "WATCHLIST",
          "label": "WATCHLIST",
          "default": "",
          "description": "To be used with linuxserver/mods:swag-auto-reload"
        },
        {
          "name": "MAXMIND_LICENSE_KEY",
          "label": "MAXMIND_LICENSE_KEY",
          "default": "",
          "description": "MaxMind License Key"
        },
        {
          "name": "CERTPROVIDER",
          "label": "CERTPROVIDER",
          "default": "",
          "description": "Optionally define the cert provider. Set to zerossl for ZeroSSL certs (requires existing ZeroSSL account and the e-mail address entered in EMAIL env var). Otherwise defaults to Let's Encrypt."
        },
        {
          "name": "PROPAGATION",
          "label": "PROPAGATION",
          "default": "60",
          "description": "Optionally define the propagation time for DNS validation. Defaults to 60 seconds."
        }
      ],
      "description": "This container sets up an Nginx webserver and reverse proxy with php support and a built-in letsencrypt client that automates free SSL server certificate generation and renewal processes. It also contains fail2ban for intrusion prevention, includes Authelia for SSO.",
      "logo": "https://raw.githubusercontent.com/JourneyOver/selfhosted_templates/main/images/swag-logo.png",
      "name": "swag-authelia",
      "platform": "linux",
      "title": "SWAG with Authelia",
      "type": 3,
      "repository": {
        "stackfile": "template/stacks/Swag-Authelia.yml",
        "url": "https://github.com/JourneyOver/selfhosted_templates"
      }
    },
    {
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "America/Chicago",
          "description": "Specify a timezone to use for example America/New_York"
        },
        {
          "name": "URL",
          "label": "URL",
          "default": "yourdomain.url",
          "description": "Top url you have control over (customdomain.com if you own it, or customsubdomain.ddnsprovider.com if dynamic dns)."
        },
        {
          "name": "VALIDATION",
          "label": "VALIDATION",
          "select": [
            {
              "text": "Use HTTP Method",
              "value": "http"
            },
            {
              "default": true,
              "text": "Use DNS Method",
              "value": "dns"
            }
          ],
          "description": "Certbot validation method to use, options are http or dns (dns method also requires DNSPLUGIN variable set)."
        },
        {
          "name": "SUBDOMAINS",
          "label": "SUBDOMAINS",
          "default": "www,",
          "description": "Subdomains you'd like the cert to cover (comma separated, no spaces) ie. www,ftp,cloud. For a wildcard cert, set this exactly to wildcard (wildcard cert is available via dns validation only)"
        },
        {
          "name": "EXTRA_DOMAINS",
          "label": "EXTRA_DOMAINS",
          "default": "",
          "description": "Additional fully qualified domain names (comma separated, no spaces) ie. extradomain.com,subdomain.anotherdomain.org,*.anotherdomain.org"
        },
        {
          "name": "DNSPLUGIN",
          "label": "DNSPLUGIN",
          "default": "",
          "description": "DNS plugin to use for dns validation (only required if using dns validation method)"
        },
        {
          "name": "EMAIL",
          "label": "EMAIL",
          "default": "",
          "description": "Optional e-mail address used for cert expiration notifications (Required for ZeroSSL)."
        },
        {
          "name": "DOCKER_MODS",
          "label": "DOCKER_MODS",
          "default": "",
          "description": "linuxserver Docker Mods"
        },
        {
          "name": "WATCHLIST",
          "label": "WATCHLIST",
          "default": "",
          "description": "To be used with linuxserver/mods:swag-auto-reload"
        },
        {
          "name": "MAXMIND_LICENSE_KEY",
          "label": "MAXMIND_LICENSE_KEY",
          "default": "",
          "description": "MaxMind License Key"
        },
        {
          "name": "CERTPROVIDER",
          "label": "CERTPROVIDER",
          "default": "",
          "description": "Optionally define the cert provider. Set to zerossl for ZeroSSL certs (requires existing ZeroSSL account and the e-mail address entered in EMAIL env var). Otherwise defaults to Let's Encrypt."
        },
        {
          "name": "PROPAGATION",
          "label": "PROPAGATION",
          "default": "60",
          "description": "Optionally define the propagation time for DNS validation. Defaults to 60 seconds."
        },
        {
          "name": "CROWDSEC_API_KEY",
          "label": "CROWDSEC_API_KEY",
          "default": "",
          "description": "CrowdSec API Key"
        },
        {
          "name": "COLLECTIONS",
          "label": "COLLECTIONS",
          "default": "crowdsecurity/nginx crowdsecurity/http-cve crowdsecurity/whitelist-good-actors LePresidente/authelia",
          "description": "CrowdSec Collections. Defaults to crowdsecurity/nginx crowdsecurity/http-cve crowdsecurity/whitelist-good-actors LePresidente/authelia"
        }
      ],
      "description": "This container sets up an Nginx webserver and reverse proxy with php support and a built-in letsencrypt client that automates free SSL server certificate generation and renewal processes. It also contains crowdsec for intrusion prevention, includes Authelia for SSO.",
      "logo": "https://raw.githubusercontent.com/JourneyOver/selfhosted_templates/main/images/swag-logo.png",
      "name": "swag-crowdsec-authelia",
      "platform": "linux",
      "title": "SWAG with Authelia and CrowdSec",
      "type": 3,
      "repository": {
        "stackfile": "template/stacks/Swag-CrowdSec-Authelia.yml",
        "url": "https://github.com/JourneyOver/selfhosted_templates"
      }
    },
    {
      "env": [
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000",
          "description": "for UserID"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000",
          "description": "for GroupID"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "America/Chicago",
          "description": "Specify a timezone to use for example America/New_York"
        },
        {
          "name": "PLEX_SECTION",
          "label": "PLEX_SECTION",
          "default": "Anime|Anime Movies",
          "description": "The library where your anime resides. Separate multiple libraries with a |"
        },
        {
          "name": "PLEX_URL",
          "label": "PLEX_URL",
          "default": "http://127.0.0.1:32400",
          "description": "The address to your Plex Media Server, for example: http://127.0.0.1:32400"
        },
        {
          "name": "PLEX_TOKEN",
          "label": "PLEX_TOKEN",
          "default": "",
          "description": "Follow [this guide](https://support.plex.tv/articles/204059436-finding-an-authentication-token-x-plex-token/)"
        },
        {
          "name": "ANI_USERNAME",
          "label": "ANI_USERNAME",
          "default": "",
          "description": "Your AniList.co username"
        },
        {
          "name": "ANI_TOKEN",
          "label": "ANI_TOKEN",
          "default": "",
          "description": "Get it [here](https://anilist.co/api/v2/oauth/authorize?client_id=1549&response_type=token)"
        },
        {
          "name": "PLEX_EPISODE_COUNT_PRIORITY",
          "label": "PLEX_EPISODE_COUNT_PRIORITY",
          "default": "false",
          "description": "If set to True, Plex episode watched count will take priority over AniList (default = False)"
        },
        {
          "name": "SKIP_LIST_UPDATE",
          "label": "SKIP_LIST_UPDATE",
          "default": "false",
          "description": "If set to True, it will NOT update your AniList which is useful if you want to do a test run to check if everything lines up properly. (default = False)"
        },
        {
          "name": "LOG_FAILED_MATCHES",
          "label": "LOG_FAILED_MATCHES",
          "default": "false",
          "description": "If set to True, failed matches will be written to /plexanisync/failed_matches.txt (default = False)"
        },
        {
          "name": "INTERVAL",
          "label": "INTERVAL",
          "default": "3600",
          "description": "The time in between syncs in seconds"
        }
      ],
      "description": "All In One Tautulli, PlexTraktSync and PlexAniSync container.",
      "logo": "",
      "name": "tautulli-plexsync",
      "platform": "linux",
      "title": "Tautulli-PlexSync",
      "type": 3,
      "repository": {
        "stackfile": "template/stacks/Tautulli-PlexSync.yml",
        "url": "https://github.com/JourneyOver/selfhosted_templates"
      }
    },
    {
      "env": [
        {
          "label": "WATCHTOWER_CLEANUP",
          "name": "WATCHTOWER_CLEANUP",
          "select": [
            {
              "default": true,
              "text": "Delete unused images",
              "value": "true"
            },
            {
              "text": "Keep unused images",
              "value": "false"
            }
          ]
        },
        {
          "name": "WATCHTOWER_SCHEDULE",
          "label": "WATCHTOWER_SCHEDULE",
          "default": "0 0 4,14,21 * * *",
          "description": "Cron expression in 6 fields (rather than the traditional 5) which defines when and how often to check for new images"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "America/Chicago",
          "description": "Specify a timezone to use for example America/New_York"
        }
      ],
      "description": "With watchtower you can update the running version of your containerized app simply by pushing a new image to the Docker Hub or your own image registry. Watchtower will pull down your new image, gracefully shut down your existing container and restart it with the same options that were used when it was deployed initially.",
      "logo": "https://raw.githubusercontent.com/JourneyOver/selfhosted_templates/main/images/watchtower-logo.png",
      "name": "watchtower",
      "note": "It is recommended to manually update your containers but we're including this for those of you that don't care",
      "platform": "linux",
      "title": "Watchtower",
      "type": 3,
      "repository": {
        "stackfile": "template/stacks/Watchtower.yml",
        "url": "https://github.com/JourneyOver/selfhosted_templates"
      }
    }
  ]
}
